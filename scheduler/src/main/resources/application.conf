include "metrics"

scheduler {
  schedule-topic = "ACCOUNT_JANITOR-SCHEDULE-V2"
  kafka-brokers = "localhost:9092"
  kafka-brokers = "localhost:9093"
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "WARNING"
  loglevel = ${?KMS_LOGGING_LEVEL}
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  kafka {
    consumer {
      poll-interval = 50ms
      poll-timeout = 50ms
      stop-timeout = 30s
      close-timeout = 20s
      commit-timeout = 15s
      wakeup-timeout = 3s
      max-wakeups = 10
      use-dispatcher = "akka.kafka.default-dispatcher"

      kafka-clients {
        // to allow us to consume from the beginning on every restart
        enable.auto.commit = false
        auto.offset.reset = "earliest"
        group.id = "com.sky.kafka.scheduler"
        bootstrap.servers = ${scheduler.kafka-brokers}

        security.protocol = PLAINTEXT
        security.protocol = SSL
        ssl {
          keystore {
            location = "/Users/NovaPS4/repos/account-janitor/kafka-rest/keystores/client.keystore.jks"
            password = "password"
          }
          truststore {
            location = "/Users/NovaPS4/repos/account-janitor/kafka-rest/keystores/client.truststore.jks"
            password = "password"
          }
        }

      }
    }

    producer {
      parallelism = 100
      close-timeout = 60s
      use-dispatcher = "akka.kafka.default-dispatcher"

      kafka-clients {
        bootstrap.servers = ${scheduler.kafka-brokers}

        security.protocol = PLAINTEXT
        security.protocol = SSL
        ssl {
          keystore {
            location = "/Users/NovaPS4/repos/account-janitor/kafka-rest/keystores/client.keystore.jks"
            password = "password"
          }
          truststore {
            location = "/Users/NovaPS4/repos/account-janitor/kafka-rest/keystores/client.truststore.jks"
            password = "password"
          }
        }

      }
    }
  }
}

kamon {
  util.filters {
    "kms-actors" {
      includes = ["kafka-message-scheduler/**"]
    }
  }

  akka.actor-groups = ["kms-actors"]
  reporters = ["kamon.prometheus.PrometheusReporter"]

  prometheus {
    buckets {
      default-buckets =  [
        10,
        30,
        100,
        300,
        1000,
        3000,
        10000,
        30000,
        100000
      ]
      time-buckets = [
        0.005,
        0.01,
        0.025,
        0.05,
        0.075,
        0.1,
        0.25,
        0.5,
        0.75,
        1,
        2.5,
        5,
        7.5,
        10
      ]

      information-buckets = [
        512000,
        1024000,
        2048000,
        4096000,
        16384000,
        65536000,
        131072000,
        262144000,
        524288000,
        1048576000,
        1310720000,
        1572864000,
        1835008000,
        2097152000
      ]
    }

    embedded-server {
      hostname = 0.0.0.0
      port = 9095
      port = ${?PROMETHEUS_SCRAPING_ENDPOINT_PORT}
    }
  }

  jmx-collector {
    mbeans = [
      {
        "metric-name": "jvm-memory",
        "jmxQuery": "java.lang:type=Memory",
        "attributes": [
          {"name": "HeapMemoryUsage", "type": "punctual-gauge", "keys": ["used", "committed", "max"]}
        ]
      },
      {
        "metric-name": "jvm-threads",
        "jmxQuery": "java.lang:type=Threading",
        "attributes": [
          {"name": "ThreadCount", "type": "punctual-gauge", "keys": []},
          {"name": "PeakThreadCount", "type": "punctual-gauge", "keys": []}
        ]
      },
      {
        "metric-name": "kafka-consumer",
        "jmxQuery": "kafka.consumer:type=consumer-metrics,client-id=*",
        "attributes": [
          { "name": "connection-count", "type": "histogram", "keys": [ ]  }
        ]
      },
      {
        "metric-name": "kafka-producer-metrics",
        "jmxQuery": "kafka.producer:type=producer-metrics,client-id=*",
        "attributes": [
          {"name": "request-rate", "type": "punctual-gauge", "keys": []},
          {"name": "response-rate", "type": "punctual-gauge", "keys": []},
          {"name": "request-latency-avg", "type": "punctual-gauge", "keys": []}
        ]
      },
      {
        "metric-name": "kafka-producer-node-metrics",
        "jmxQuery": "kafka.producer:type=producer-node-metrics,client-id=*,node-id=*",
        "attributes": [
          { "name": "incoming-byte-rate", "type": "punctual-gauge", "keys": [ ]  },
          { "name": "outgoing-byte-rate", "type": "punctual-gauge", "keys": [ ]  }
        ]
      }
    ],
    initial-delay = 5 second,
    value-check-interval = 5 seconds
  }

  system-metrics.host.enabled = false
}